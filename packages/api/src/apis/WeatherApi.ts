/* tslint:disable */
/* eslint-disable */
/**
 * Blog API
 * API for managing blog posts with MDX content parsing
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ProblemDetails,
  WeatherForecast,
} from '../models/index';
import {
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    WeatherForecastFromJSON,
    WeatherForecastToJSON,
} from '../models/index';

/**
 * WeatherApi - interface
 * 
 * @export
 * @interface WeatherApiInterface
 */
export interface WeatherApiInterface {
    /**
     * Returns an array of weather forecasts for the next 5 days starting from tomorrow.  Each forecast includes date, temperature in Celsius and Fahrenheit, and a weather summary.    Sample response:  ```json  [    {      \"date\": \"2024-01-16\",      \"temperatureC\": 15,      \"temperatureF\": 59,      \"summary\": \"Mild\"    }  ]  ```
     * @summary Gets a 5-day weather forecast with random temperature data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApiInterface
     */
    getWeatherForecastRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WeatherForecast>>>;

    /**
     * Returns an array of weather forecasts for the next 5 days starting from tomorrow.  Each forecast includes date, temperature in Celsius and Fahrenheit, and a weather summary.    Sample response:  ```json  [    {      \"date\": \"2024-01-16\",      \"temperatureC\": 15,      \"temperatureF\": 59,      \"summary\": \"Mild\"    }  ]  ```
     * Gets a 5-day weather forecast with random temperature data
     */
    getWeatherForecast(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WeatherForecast>>;

}

/**
 * 
 */
export class WeatherApi extends runtime.BaseAPI implements WeatherApiInterface {

    /**
     * Returns an array of weather forecasts for the next 5 days starting from tomorrow.  Each forecast includes date, temperature in Celsius and Fahrenheit, and a weather summary.    Sample response:  ```json  [    {      \"date\": \"2024-01-16\",      \"temperatureC\": 15,      \"temperatureF\": 59,      \"summary\": \"Mild\"    }  ]  ```
     * Gets a 5-day weather forecast with random temperature data
     */
    async getWeatherForecastRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WeatherForecast>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/WeatherForecast`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WeatherForecastFromJSON));
    }

    /**
     * Returns an array of weather forecasts for the next 5 days starting from tomorrow.  Each forecast includes date, temperature in Celsius and Fahrenheit, and a weather summary.    Sample response:  ```json  [    {      \"date\": \"2024-01-16\",      \"temperatureC\": 15,      \"temperatureF\": 59,      \"summary\": \"Mild\"    }  ]  ```
     * Gets a 5-day weather forecast with random temperature data
     */
    async getWeatherForecast(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WeatherForecast>> {
        const response = await this.getWeatherForecastRaw(initOverrides);
        return await response.value();
    }

}
