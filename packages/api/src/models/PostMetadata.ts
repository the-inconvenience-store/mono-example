/* tslint:disable */
/* eslint-disable */
/**
 * Mono API
 * API for managing blog posts with MDX content parsing & retrieving the weather forecast
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents metadata for a blog post extracted from MDX frontmatter
 * @export
 * @interface PostMetadata
 */
export interface PostMetadata {
    /**
     * The title of the blog post
     * @type {string}
     * @memberof PostMetadata
     */
    title: string;
    /**
     * The publication date of the blog post in ISO format (YYYY-MM-DD)
     * @type {string}
     * @memberof PostMetadata
     */
    publishedAt: string;
    /**
     * A brief summary of the blog post content
     * @type {string}
     * @memberof PostMetadata
     */
    summary: string;
    /**
     * Optional featured image URL for the blog post
     * @type {string}
     * @memberof PostMetadata
     */
    image?: string | null;
}

/**
 * Check if a given object implements the PostMetadata interface.
 */
export function instanceOfPostMetadata(value: object): value is PostMetadata {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('publishedAt' in value) || value['publishedAt'] === undefined) return false;
    if (!('summary' in value) || value['summary'] === undefined) return false;
    return true;
}

export function PostMetadataFromJSON(json: any): PostMetadata {
    return PostMetadataFromJSONTyped(json, false);
}

export function PostMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'publishedAt': json['publishedAt'],
        'summary': json['summary'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

export function PostMetadataToJSON(json: any): PostMetadata {
    return PostMetadataToJSONTyped(json, false);
}

export function PostMetadataToJSONTyped(value?: PostMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'publishedAt': value['publishedAt'],
        'summary': value['summary'],
        'image': value['image'],
    };
}

