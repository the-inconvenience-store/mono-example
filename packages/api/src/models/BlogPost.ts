/* tslint:disable */
/* eslint-disable */
/**
 * Blog API
 * API for managing blog posts with MDX content parsing
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostMetadata } from './PostMetadata';
import {
    PostMetadataFromJSON,
    PostMetadataFromJSONTyped,
    PostMetadataToJSON,
    PostMetadataToJSONTyped,
} from './PostMetadata';

/**
 * Represents a complete blog post with metadata, content, and slug
 * @export
 * @interface BlogPost
 */
export interface BlogPost {
    /**
     * 
     * @type {PostMetadata}
     * @memberof BlogPost
     */
    metadata: PostMetadata;
    /**
     * The URL-friendly slug derived from the filename
     * @type {string}
     * @memberof BlogPost
     */
    slug: string;
    /**
     * The main content of the blog post (MDX content without frontmatter)
     * @type {string}
     * @memberof BlogPost
     */
    content: string;
}

/**
 * Check if a given object implements the BlogPost interface.
 */
export function instanceOfBlogPost(value: object): value is BlogPost {
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function BlogPostFromJSON(json: any): BlogPost {
    return BlogPostFromJSONTyped(json, false);
}

export function BlogPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlogPost {
    if (json == null) {
        return json;
    }
    return {
        
        'metadata': PostMetadataFromJSON(json['metadata']),
        'slug': json['slug'],
        'content': json['content'],
    };
}

export function BlogPostToJSON(json: any): BlogPost {
    return BlogPostToJSONTyped(json, false);
}

export function BlogPostToJSONTyped(value?: BlogPost | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'metadata': PostMetadataToJSON(value['metadata']),
        'slug': value['slug'],
        'content': value['content'],
    };
}

